
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admins/Views/Shared/_LayoutAdmins.cshtml";
}

<div class="show-table">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-8">
                @Html.Partial("_Index")
            </div>
            <div class="col-md-4 p-2">
                @Html.Partial("_AddOrEdit")
            </div>
        </div>
    </div>
</div>

@section scripts{

    <script>
        var itemInfor = new Object();
        let dataFilter = [];
        pageSize = 15;
        $.ajax({
            url: '/Admins/LEADERTEAMs/GetDataJSON',
            type: 'POST',
            dataType: 'json',
            data: {

            },
            beforeSend: function () {

            },
            success: function (res) {
                data = res;
                dataFilter = res;
                updatePageCount(dataFilter.length, pageSize);
                setPagination(pageCount, 1);
                setPagingDataHtml(pageSize, 1);
                let count = data.length;
                $('#record-count').html(`Tổng số có:<span class="btn-tools btn-red">${count}</span> Banner`);
            },
            error: function () {

            },
            complete: function () {

            }
        })
        setSelectDisplay();
        function setDataHtml(obj, stt) {

            let rowStatus = '<span class="text-success">Hoạt động</span>';
            let UPDATED_DATE = new Date();
            if (obj.UPDATED_DATE != null)
                UPDATED_DATE = (new Date(parseInt(obj.UPDATED_DATE.substr(6)))).toLocaleDateString();
            if (obj.STATUS != 1) {
                rowStatus = '<span class="text-danger"> Đang khóa </span>';
            }
            let row = `<tr data-id="${obj.ID}" class="btnRowClick">
                                                <td class="text-right">${stt}</td>
                                                <td>${obj.NAME}</td>
                                                <td>
                                                    ${UPDATED_DATE}
                                                </td>
                                                <td>${obj.ORDER}</td>
                                                <td>
                                                    ${rowStatus}
                                                </td>
                                                <td>
                                                    <div class="d-flex justify-content-end w-100">
                                                        <button class="btn-green btn-event" onclick="fillDataFormControl(${obj.ID})"><i class="fas fa-info-circle"></i> </button>
                                                        <button class="btn-yellow btn-event" onclick="fillDataFormControl(${obj.ID})"><i class="far fa-edit"></i> </button>
                                                        <button class="btn-red btn-event" role="button" onclick="deleteByID(${obj.ID})"><i class="far fa-trash-alt"></i> </button>
                                                    </div>
                                                </td>
                                            </tr>`;
            $('#myTable tbody').append(row);
        }
        function setListDataHtml(data, sttStart) {
            $('#myTable tbody').html('');
            let stt = sttStart;
            $.each(data, function (index, item) {
                setDataHtml(item, stt)
                stt++;
            })
        }
        function searchInput() {
            $('.search input').change(function () {
                let text = $(this).val();
                text = text.trim();
                dataFilter = data.filter(x => x.TITLE.toLowerCase().includes(text.toLowerCase().trim()));
                updatePageCount(dataFilter.length, pageSize);
                setPagination(pageCount, 1);
                setPagingDataHtml(pageSize, 1);
            })
            $('.search input').keyup(function (e) {
                if (e.keyCode == 13) {
                    let text = $(this).val();
                    text = text.trim();
                    dataFilter = data.filter(x => x.TITLE.toLowerCase().includes(text.toLowerCase().trim()));
                    updatePageCount(dataFilter.length, pageSize);
                    setPagination(pageCount, 1);
                    setPagingDataHtml(pageSize, 1);
                }
            });
        }
        searchInput();
    </script>

    <script>
        $(document).ready(function () {
            $('.btnAdd,.btnCancel').click(function () {
                addNew();
            });
            $('.btnSave').click(function () {
                save();
            });
        });


        function fillDataFormControl(id) {
            dataControl = data.filter(x => x.ID == id);
            $.each(dataControl, function (index, item) {
                $.each(item, function (key, value) {
                    if (key == "STATUS") {
                        if (value == 1) {
                            $(".objInfor input[name=STATUS][value='1']").prop('checked', true);
                        } else {
                            $(".objInfor input[name=STATUS][value='0']").prop('checked', true);
                        }
                    }
                    else if (key == "IS_HOME") {
                        if (value == 1) {
                            $(".objInfor input[name=IS_HOME][value='1']").prop('checked', true);
                        } else {
                            $(".objInfor input[name=IS_HOME][value='0']").prop('checked', true);
                        }
                    }

                    else if (key == "IMAGE") {
                        $(".objInfor #show-img").attr("src", value);
                        $(".objInfor input[name=" + key + "]").val(value);
                    }
                    else if (key == "DESCRIPTION") {
                        $(".objInfor textarea[name=" + key + "]").val(value);
                    }

                    else
                        if (key == "CREATED_DATE" || key == "UPDATED_DATE") {
                            $(".objInfor input[name=" + key + "]").val((new Date(parseInt(value.substr(6)))).toLocaleDateString());
                        } else {
                            $(".objInfor input[name=" + key + "]").val(value);
                        }
                });
            });
        }

        function addNew() {
            $(".objInfor input[type=text],.objInfor input[type=number]  ,.objInfor textarea").each(function () {
                $(this).val('');
                itemInfor[$(this).attr('name')] = "";
            });
            $(".objInfor input[name=STATUS][value='1']").prop('checked', true);
            itemInfor["STATUS"] = true;

            //$(".objInfor input[name=IS_HOME][value= true]").prop('checked', true);
            //itemInfor["IS_HOME"] = true;

            $(".objInfor input[name=ID]").val("0");
            itemInfor["ID"] = "0";
            $(".objInfor input[name=ORDER]").val("0");
            itemInfor["ORDER"] = "0";
            $(".objInfor input[name='IMAGE']").val("/Content/images/no-image-available-thumb(1349x760-crop).jpg");
            $(".objInfor img").attr('src', "/Content/images/no-image-available-thumb(1349x760-crop).jpg");
        }

        function save() {
            let id = $(".objInfor input[name=ID]").val();
            if (id != "0")
                dataControl = data.filter(x => x.ID == id);
            else
                dataControl = data.slice(0, 1);

            $('.objInfor input[type="text"],.objInfor input[type="number"], .objInfor input[type="hidden"], .objInfor input[type="date"]').each(function () {
                itemInfor[$(this).attr('name')] = $(this).val();
            });

            $('.objInfor input[type=radio]:checked').each(function () {
                itemInfor[$(this).attr('name')] = $(this).val();
            });

            itemInfor["DESCRIPTION"] = $(".objInfor textarea[name='DESCRIPTION']").val();
            console.log(itemInfor);

            $.ajax({
                url: '/admins/LEADERTEAMs/AddOrUpdate',
                type: 'POST',
                dataType: 'json',
                data: {
                    itemInfor: itemInfor
                },
                beforeSend: function () {

                },
                success: function (res) {
                    let id = $('#ID').val();
                    if (id == 0) {
                        msg0 = "Thêm mới dữ liệu thành công.";
                        msg1 = "Đã xảy ra lỗi khi thêm mới dữ liệu";
                    } else {
                        msg0 = 'Sửa đổi dữ liệu thành công';
                        msg1 = 'Đã xảy ra lỗi khi sửa đổi dữ liệu';
                    }
                    if (res != null) {
                        swal({
                            title: "Thông báo",
                            text: msg0,
                            icon: "success",
                            dangerMode: true,
                        }).then(() => {

                        });
                    } else {
                        swal({
                            title: "Thông báo",
                            text: msg1,
                            icon: "warning",
                            dangerMode: true,
                        });
                    }
                    data = res;
                    dataFilter = res;
                    updatePageCount(dataFilter.length, pageSize);
                    setPagination(pageCount, 1);
                    setPagingDataHtml(pageSize, 1);
                    let count = data.length;
                    $('#record-count').html(`Tổng số có:<span class="btn-tools btn-red">${count}</span> Banner`);

                },
                error: function () {

                },
                complete: function () {

                }
            });
        }
    </script>


    <script>
        function deleteByID(id) {
            swal({
                title: "Xóa dữ liệu này?",
                text: "Dữ liệu xóa sẽ không thể khôi phục!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $.ajax({
                            url: "/admins/LEADERTEAMs/DeleteByID",
                            type: 'POST',
                            dataType: 'json',
                            data: { id: id },
                        })
                            .done(function (res) {
                                if (res == 1) {
                                    toastr.success('Đã xóa dữ liệu', 'Thông báo');
                                    LoadData(id);
                                } else {
                                    toastr.success('Lỗi xử lý xóa dữ liệu', 'Thông báo');
                                }
                            })
                            .fail(function () {

                            })
                            .always(function () {

                            });
                    };
                });
        }

        function LoadData(id) {
            data = data.filter(x => x.ID !== id);
            dataFilter = data.filter(x => x.ID !== id);
            updatePageCount(dataFilter.length, pageSize);
            setPagination(pageCount, 1);
            setPagingDataHtml(pageSize, 1);
            let count = data.length;
            $('#record-count').html(`Tổng số có:<span class="btn-tools btn-red">${count}</span> Banner`);

        }

    </script>

    <script>
        ChooseImage();
        function ChooseImage() {
            $('#show-img').click(function () {
                let finder = new CKFinder();
                let img = this;
                finder.selectActionFunction = function (fileUrl) {
                    console.log(fileUrl);
                    $(img).attr('src', fileUrl);
                    $('#image').val(fileUrl);
                };
                finder.popup();
            });
        }
    </script>

 
}

